#This SQL code utilizes a database with multiple tables which is then queried to answer questions about customer and order data. 

#1.How many orders were placed in January? 
SELECT count(orderID) 
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#2. How many of those orders were for an iPhone?
SELECT count(orderID)
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND Product = 'iPhone';

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT acctnum
FROM BIT_DB.customers
INNER JOIN BIT_DB.FebSales
on customers.order_id = FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID';

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT 
Product, 
Price
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
ORDER BY price asc
LIMIT 1;

#5.What is the total revenue for each product sold in January?
SELECT 
Product, 
SUM(quantity)*price as Revenue
FROM BIT_DB.JanSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
GROUP BY product;


#6.Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT 
Product, 
SUM(quantity) as Quantity, 
SUM(quantity)*price as Revenue 
FROM BIT_DB.FebSales
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY product;

#7.How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT 
count(distinct customers.acctnum),
avg(quantity*price)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
on customers.order_id = FebSales.orderID
WHERE length(orderID) = 6
AND orderID <> 'Order ID'
AND FebSales.quantity > 2;

#8.List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT 
Product, 
SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;
